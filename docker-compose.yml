version: '2'
services:
      
  # RawDataWorker
  # Role: (Http|WebSocket)->RawDataService<-(Http|WebSocket)
  raw-data-worker:
    container_name: message-raw-data-worker
    image: message-service:develop-SNAPSHOT
    build:
      context: ./
    environment:
      APP_MAIN: 'data/main-raw-data-worker.mjson'
    ports:
      - "8080:8080"
    networks:
      - frontend
      - backend
    volumes:
      - ./node_modules:/usr/src/app/node_modules:ro
      - ./data:/usr/src/app/data:ro
      - ./logic:/usr/src/app/logic:ro
      - ./ui:/usr/src/app/ui:ro
      - ./scripts:/usr/src/app/scripts:ro
      
  # DataWorker 
  # Role: (Kafka|Http|WebSocket)->Kafka->(Kafka|Http|WebSocket)
  data-worker:
    container_name: message-data-worker
    image: message-service:develop-SNAPSHOT
    build:
      context: ./
    environment:
      APP_MAIN: 'data/main-data-worker.mjson'
    ports:
      - "8081:8081"
    networks:
      - frontend
      - backend
    volumes:
      - ./node_modules:/usr/src/app/node_modules:ro
      - ./data:/usr/src/app/data:ro
      - ./logic:/usr/src/app/logic:ro
      - ./scripts:/usr/src/app/scripts:ro

  # RemoteServerService or RemoteOperationCoordinator if enabled
  # Role: (Http|WebSocket)->(Kafka)->(Http|WebSocket)
  data-coordinator:
    container_name: message-data-coordinator
    image: message-service:develop-SNAPSHOT
    build:
      context: ./
    environment:
      APP_MAIN: 'data/main-data-coordinator.mjson'
    # Exposed port
    ports:
      - "8082:8082"
    networks:
      - frontend
      - backend
    volumes:
      - ./node_modules:/usr/src/app/node_modules:ro
      - ./data:/usr/src/app/data:ro
      - ./logic:/usr/src/app/logic:ro
      - ./scripts:/usr/src/app/scripts:ro

  # ScheduledWorker
  # Role: (CLI)->RawDataService->(Kafka|Http|WebSocket)
  message-cli:
    container_name: message-data-cli
    image: message-service:develop-SNAPSHOT
    networks:
      - frontend
      - backend
    volumes:
      - ./node_modules:/usr/src/app/node_modules:ro
      - ./data:/usr/src/app/data:ro
      - ./logic:/usr/src/app/logic:ro
      - ./scripts:/usr/src/app/scripts:ro
    entrypoint: ["node"]
    # TODO operation
    command: ["cli", "--fetchData", '{ "root": { "prototype": "montage/data/model/data-query", "values": { "criteria": {}, "orderings": [], "prefetchExpressions": null, "typeModule": { "%": "data/descriptors/message.mjson" } } } }']

# Default network
networks:
  frontend:
  backend: